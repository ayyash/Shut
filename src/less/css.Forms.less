@import "utilities/border";

/****************mdinput matches material design guideliens **************/
// TODO: remove specifics, keep generics, move stuff to framework
.input() {
	
	&:focus {
		outline: none;
	}

	/* used to mimic the text input for regular text */
	border: 1px solid @grey-light;
	
	.border-radius(@radius-input);
	outline: none; 
} 
.md-field {
	position: relative;
	display: block;
	background-color: @grey-light;
	&.with-prefix {
		padding-left: 2rem;
	}
}
.md-help-text {
	color: @text-light;
	#rem>.font-size(@font-size-small);
	margin-left: @md-input-padding[left];
}


.md-input {
	border: 0;
	outline: none;
	padding: @md-input-padding[top] @md-input-padding[right]  @md-input-padding[bottom] @md-input-padding[left] ;
	
	border-bottom: 1px solid @grey-dark;
	background-color: transparent;
	caret-color: @linkcolor;
	&:focus {
		outline: none;
		border-bottom-color: @linkcolor;
		box-shadow: 0 1px 0px 0px @linkcolor;
	}
	&:focus ~ .md-asterisk {
		display: none;
	}
	&:focus ~ .md-label {
	
		transform: translateY(-50%) scale(.75)
	}
}
.md-label {
    position: absolute;
    top: @md-input-padding[top] - 7;
    left: @md-input-padding[left];
    color: @text-light;
    //padding-bottom: 0!important;
	cursor: auto;
	transform-origin: left;
	// transition: left 0.3s,  top 0.3s, font-size 0.3s;
	transition: transform 0.3s;
    &.focused {
        // transform: translateY(142%);
		transform: translateY(-50%) scale(.75)
        
    }
}

.md-invalid-feedback {
	background-color: @red;
    color: @white;
    .small();
    position: absolute;
    bottom: -24px;
    left: 5px;
    z-index: 1000;
    border-radius: @radius;
    padding: 2px 5px;
    white-space: nowrap;
    width:auto; // god damn u bootstrap
    &:before {
        border-color: @red;
        content: "";
        display: inline-block;
        height: 0;
        width: 0;
        position: absolute;
        left: 45%;
        top: -4px;

        border-style: solid;
        border-color: transparent;
        border-width: 0 4px 4px;
        border-bottom-color: @red;
    }
    display: none;
}









input[readonly], input[disabled] {
	border: 1px solid @grey-light;
	color: @text-light;
}



input[type="file"] {
	.input();
	background-color: #fff;
	padding: 2px;
}

input:-ms-input-placeholder {
	color: @text-light;
}

input::-webkit-input-placeholder {
	color: @text-light;
}


input::-moz-placeholder {
	color: @text-light;
}

.md-asterisk {
	display: inline-block;
	position: absolute;
	right: 5px;
	top: 0;
	&:after {
		display: block;
		content: "*";
		#rem > .font-size(1.8);
		font-weight: @font-weight-bold;
		line-height: 1.5;
		color: @red;
	}
}


.checkbox, .radio {
	opacity: 0;
	position: absolute;
	
	& + label {
		padding-left: 25px;
		min-height: 21px;
		position: relative;
		margin-bottom: 1px;
		cursor: pointer;
		display: inline-block;
		&:before {
			border: 1px solid @grey;
			content: " ";
			height: 20px; 
			width: 20px;
			left: 0;
			position: absolute;
			top: -1px;
		}
	}
	&:checked + label:before {
		border:4px solid @green;
	}
}
.radio + label:before {
	border-radius: 50%;
}


/* controls */

.radio {

	& + label:before {
		border: 1px solid @grey-light;
	}
	&:checked + label:before {
		border:4px solid @green;
	}
}
.checkbox {
	& + label:before {
		border: 3px solid @grey;
	}
	&:checked + label:before {
		border: 3px solid @green;
		background-color: @green;
		.displayIcon(@icon-tick);
		color:@white;
	}
}