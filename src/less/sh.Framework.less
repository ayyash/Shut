
// those are framework specific classes, that can be customized in each client
// copy the file along with vars file, into project folder, and customize

.shadow() {
	border: 1px solid @grey;
	border-radius: @radius;
	box-shadow: 0 0 4px -2px rgba(0, 0, 0, 0.9);
}

.scroll() {
	&::-webkit-scrollbar {
		width: 9px;
		height: 9px;
	}
	&::-webkit-scrollbar-button:start:decrement, &::-webkit-scrollbar-button:end:increment {
		display: block;
		height: 0;
		background-color: transparent;
	}
	&::-webkit-scrollbar-track-piece {
		background-color: @grey-light;
		border-radius: 0;
		border-bottom-right-radius: 8px;
		border-bottom-left-radius: 8px;
	}
	&::-webkit-scrollbar-thumb:vertical {
		height: 50px;
		background-color: @grey-dark;
		border-radius: 8px;
	}
	&::-webkit-scrollbar-thumb:horizontal {
		width: 50px;
		background-color: @grey;
		border-radius: 8px;
	}
}


/* symbol definition */

.symbol {
	&:before {
		vertical-align: middle;
		font-size: 200%;
		// line-height
		/* this is because im padding the icon file with 50% of its width */
	}
	&.loadings:before {
		visibility: hidden;
	}
}

.symbolAfter {
	&:after {
		font-size: 200%;
		vertical-align: middle;
	}
	&.loadings:before {
		visibility: hidden;
	}
}

i.liga {
	font-size: 200%;
}
// for icons with text to the right side
.icon-inline {
	&:before {
        margin-right: 5px;
    }
}

/*modal close button */

.jqmClose {
	.getIcon(@icon-x);
	position: absolute;
	top: 5px;
	right: 5px;
	display: block;
	overflow: hidden;
	
	text-align: center;
	width: 30px;
	height: 30px;
	
	
	
}

 h3.jqmTitle {
	 padding-bottom: 20px;
 }
.dialog,
.dialogcontent {
	box-shadow: 0 0 50px 1px #000;
	padding: 24px;
}
.jqmOverlay {
	background-color: rgba(0,0,0,0.6);
}
/* sitelogo */

h1.sitelogo {
	margin: 0;
	// .columns(@logocolumns);
	height: 5vh;
	a {
		background: transparent url("@{image-url}ilogo.png") no-repeat left center;
		background-size: contain;
	}
}


/* stacks */

.overview fieldset {
	margin-bottom: 20px;
}

.overview legend {
	padding-bottom: 20px;
}

.overview dt {
	color: @blue;
}

.invstack dt {
	color: @text-color;
}

.detailed fieldset {
	margin-bottom: 20px;
}

.detailed dl {
	margin-bottom: 20px;
}

.detailed dd, .detailed fieldset > .stack, .detailed > .stack {
	padding-left: 30%;
	margin-bottom: 10px;
}


/* STACKS: could be listings or div items, define how multiple field-name-value elements appear together */

.stack {
	margin-bottom: 10px;
}

.stack .stackitem, ol.stacklist > li {
	margin-bottom: 30px;
	.tight & {
		margin-bottom: 10px;
	}
}

.stack label, ol.stacklist > li label, .stack .label, ol.stacklist > li .label {
	display: block;
	padding-bottom: 5px;
}


/* detailed extension: ingredients */

.ingredients {
	dt {
		color: @grey;
	}
	dd {
		border-top: 1px solid @grey-light;
		min-height: 15px;
	}
	&.tight dd {
		.txt-r();
	}
	&.xlarge dd {
		.large();
		.lightface();
	}
}


/***** active list */

ul.activelist > li {
	display: block;
	margin-right: 2px;
	margin-bottom: 1px;
}

ul.activelist > li a {
	display: block;
	background-color: @grey-light;
	padding: 2px 5px;
	color: @text-color;
}

ul.activelist li a:hover {
	background-color: @linkcolor;
	color: @white;
}


/****** filter list or expand list */

.filterlist {
	position: relative;
	.h {
		.a();
	}
	// &.toggle {
	// 	.h {}
	// }
	.guts {
		display: none;
		background-color: @white;
		left: 0;
		top: 30px;
		z-index: 1000;
		border: 3px solid @grey;
		padding: 3px;
		// .basicballoon;
		position: absolute;
		&:after {
			border-color: @grey-dark;
		//	#arrow > .above(6px);
		}
	}
	.guts li {
		/* default width can be overwritten with the right up1,2,3... */
		a {
			display: block;
			padding: 3px;
		}
		&:hover {
			background-color: @yellow-light;
		}
		&.selected {
			background-color: @grey-light;
		}
		&.selected a {
			color: @text-color;
		}
	}
}


/* bordred */

.bthin, .bthick {
	border-color: @grey;
}


/* TABULATED */

table.tabulated th {
	font-weight: @font-weight-bold;
}

table.striped {
	tbody tr:nth-child(odd) {
		background-color: @grey-light;
	}
}

table.rich {
	th, td {
		border: 1px solid @grey-light;
		padding: 5px;
	}
	th {
		font-weight: @font-weight-bold;
		background-color: @grey-light;
		border: 1px solid @grey;
		border-bottom: 2px solid @grey-dark;
	}
}


/* boxes */

.feedbackbox() {
	.box();
	box-shadow: 0 2px 2px 0 rgba(0, 0, 0, .14), 0 3px 1px -2px rgba(0, 0, 0, .2), 0 1px 5px 0 rgba(0, 0, 0, .12);
	padding: 15px;
	margin: 10px auto;
}

.infobox {
	.feedbackbox();
	background-color: @blue-light;
	.txt-center();
	.header {
		color: @blue;
		.getIcon(@icon-info);
		&:before {
			margin-bottom: 10px;
			display: block;
			text-shadow: 0 2px 0 rgba(0, 0, 0, .14);
		}
	}
}

.alertbox {
	.feedbackbox();
	background-color: @yellow-light;
	.header {
		.getIcon(@icon-exclamation);
	}
}

.errorbox {
	.feedbackbox();
	background-color: @red-light;
	border: 1px solid lighten(@red, 45);
	.header {
		display: block;
		.red();
		.getIcon(@icon-exclamation);
		text-shadow: 1px 1px 0 rgba(255, 255, 255, 0.5);
	}
}


.greybox {
	// added defnitiion
	border:1px solid @grey;
}
/* close lable */

.closelabel {
	/*.getIcon(@icon-x);*/
	overflow: hidden;
	width: 20px;
	height: 20px;
	.cam();
}


/* forms */


/*redefine input */

.input() {
	padding: 9px 0 9px 5px;
	//background-color: @grey;
	&:focus {
		outline: none;
		
	}
	// &:placeholder-shown {
	// 	background-color: @inversecolor;
	// }
} 

input[readonly], input[disabled] {
	border: 1px solid @grey-light;
	color: @text-light;
}

.mimictextinput[data-readonly="readonly"] {
	border: 1px solid @grey-light;
	color: @text-light;
}

.mimictext[data-readonly="readonly"] {
	border: 1px solid @grey-light;
	color: @text-light;
}


/* header navigation */

header nav.main {
	padding-top: 10px;
}

header nav.tools {
	position: absolute;
	right: 0;
	top: 5px;
	a {
		color: @white;
	}
}




/* keep these last */

.loading {

	background-image: url("@{image-url}iloading.gif");
	/*min-height: 20px;*/
}

.loadings {
	background-image: url("@{image-url}iloadings.gif");
}


/* controls */

.radio {

	& + label:before {
		border: 1px solid @grey-light;
	}
	&:checked + label:before {
		border:4px solid @green;
	}
}
.checkbox {
	& + label:before {
		border: 3px solid @grey;
	}
	&:checked + label:before {
		border: 3px solid @green;
		background-color: @green;
		.displayIcon(@icon-tick);
		color:@white;
	}
}

